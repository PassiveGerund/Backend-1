import express from 'express';
import logger from './logger/pino.logger';

const server = express();
server.use(express.json()); // ะะบะปััะฐะตะผ ะฟะฐััะตั ัะตะปะฐ

const port = 2000;

server.get('/', (req, res) => {
  logger.info('ะะปะฐะฒะฝะฐั ัััะฐะฝะธัะฐ');
  res.json({ key: 'value123' });
});

server.get('/task', (req, res) => {
  logger.info('ะกะฟะธัะพะบ ะทะฐะดะฐั');
  res.send('ะกะฟะธัะพะบ ะทะฐะดะฐั');
});

server.get('/task/:id', (req, res) => {
  const id = req.params.id;
  logger.info(`ะะฐะดะฐัะฐ ${id}`);
  res.send('ะะดะฝะฐ ะทะฐะดะฐัะฐ');
});

server.get('/task/my/authored', (req, res) => {
  logger.info(`ะกะฟะธัะพะบ ัะฒะพะธั ัะพะทะดะฐะฝะฝัั ะทะฐะดะฐั`);
  res.send('ะกะฟะธัะพะบ ัะฒะพะธั ัะพะทะดะฐะฝะฝัั ะทะฐะดะฐั');
});

server.get('/task/my/assigned', (req, res) => {
  logger.info(`ะกะฟะธัะพะบ ัะฒะพะธั ะฝะฐะทะฝะฐัะตะฝะฝัั ะทะฐะดะฐั`);
  res.send('ะกะฟะธัะพะบ ัะฒะพะธั ะฝะฐะทะฝะฐัะตะฝะฝัั ะทะฐะดะฐั');
});

server.get('/user/:id', (req, res) => {
  const { id } = req.params;
  logger.info(`ะะพะปัะทะพะฒะฐัะตะปั ${id}, ะดะตัะถะธัะต ะฝะพะฒะพััะธ!`);
  res.send(`ะะพะปัะทะพะฒะฐัะตะปั ${id}, ะดะตัะถะธัะต ะฝะพะฒะพััะธ!`);
});

server.get('/user/:id/news/:newsId', (req, res) => {
  const id: string = req.params.id;
  const newsId: string = req.params.newsId;
  logger.info(`ะะตัะถะธัะต ะฝะพะฒะพััะธ ${id}  ${newsId}!`);
  res.send(`ะะตัะถะธัะต ะฝะพะฒะพััะธ ${id}  ${newsId}!`);
});

server.post('', (req, res) => {
  // console.log('ะัะธัะปะพ ัะตะปะพ:');
  // console.log(req.body);
  const body = JSON.stringify(req.body);
  logger.info(`ะัะธัะปะพ ัะตะปะพ: ${body}  !`);
  res.send(`ะัะธัะปะพ ัะตะปะพ: ${body}`);
});

server.post('/task', (req, res) => {
  logger.info('ะัะธัะตะป ะทะฐะฟัะพั ั ะผะตัะพะดะพะผ POST. ะกะพะทะดะฐัั ะทะฐะดะฐัั');
  res.send('ะกะพะทะดะฐัั ะทะฐะดะฐัั');
});

server.put('/task/:id', (req, res) => {
  const id: string = req.params.id;
  logger.info(`ะัะธัะตะป ะทะฐะฟัะพั ั ะผะตัะพะดะพะผ PUT. ะะฑะฝะพะฒะธัั ะทะฐะดะฐัั ${id}`);
  res.send('ะะฑะฝะพะฒะธัั ะทะฐะดะฐัั');
});

server.delete('/task/:id', (req, res) => {
  const id: string = req.params.id;
  logger.info(`ะัะธัะตะป ะทะฐะฟัะพั ั ะผะตัะพะดะพะผ DELETE. ะะฑะฝะพะฒะธัั ะทะฐะดะฐัั ${id}`);
  res.send('ะฃะดะฐะปะธัั ะทะฐะดะฐัั');
});

server.listen(port, () => {
  logger.info(`ะญัะพ ะฟะพะฑะตะดะฐ ๐๐๐ ${port}...`);
});
